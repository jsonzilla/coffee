name: Build & Tests

on:
  push:
    branches:
      - master
      - release
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        # - name: Qt 5 / Linux x86_64
        #   os: ubuntu-latest
        #   # XXX: --privileged is sort of a brute-force solution to get FUSE
        #   #      working inside Docker, however so far I haven’t been able to
        #   #      figure out precisely *which* privileges are needed.
        #   container: { image: "ubuntu:16.04", options: --privileged }
        #   qt: 5
        # - name: Qt 5 / macOS x86_64
        #   os: macos-latest
        #   container:
        #   qt: 5
        # - name: Qt 5 / Windows x86
        #   os: windows-2019
        #   arch: win32_msvc2019
        #   container:
        #   qt: 5
        # - name: Qt 5 / Windows x86_64
        #   os: windows-2019
        #   arch: win64_msvc2019_64
        #   container:
        #   qt: 5
        - name: Qt 6 / Linux x86_64
          os: ubuntu-latest
          # XXX: --privileged is sort of a brute-force solution to get FUSE
          #      working inside Docker, however so far I haven’t been able to
          #      figure out precisely *which* privileges are needed.
          container: { image: "ubuntu:22.04", options: --privileged }
          qt: 6
        # - name: Qt 6 / macOS x86_64
        #   os: macos-latest
        #   container:
        #   qt: 6
        - name: Qt 6 / Windows x86_64
          os: windows-2019
          arch: win64_msvc2019_64
          container:
          qt: 6

    name: ${{matrix.name}}
    runs-on: ${{matrix.os}}
    container: ${{matrix.container}}

    steps:
    - name: Install git (Linux)
      # GitHub runners come with git pre-installed, but our "custom" Linux
      # container image does not
      if: runner.os == 'Linux'
      run: |
        apt-get update -yq
        apt-get -yq install software-properties-common
        apt-add-repository -y ppa:git-core/ppa
        apt-get update -yq
        apt-get install -yq --no-install-suggests --no-install-recommends git
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        arch: ${{matrix.arch}}
        qt: ${{matrix.qt}}

    - name: Set up environment
      uses: ./.github/actions/setup-environment
      with:
        arch: ${{matrix.arch}}

    - name: Configure build
      run: cmake -S . -B build

    - name: Build Pencil2D
      working-directory: build
      run: cmake --build . --config Release --target install --parallel
